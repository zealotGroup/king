<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="group.zealot.king.core.db.mybatis.system.SysRoleDataMapper">
    <!--废弃    <cache type="group.zealot.king.core.db.mybatis.core.cache.RedisStringCache"/>-->

    <sql id="field">
        srd.id id,
        srd.create_time createTime,
        srd.create_user_id createUserId,
        srd.last_update_time lastUpdateTime,
        srd.last_update_user_id lastUpdateUserId,
        srd.remark remark,
        srd.name name
    </sql>
    <sql id="where">
        <if test="id != null">
            and srd.id = #{id}
        </if>
        <if test="name != null">
            and srd.name = #{name}
        </if>
    </sql>

    <select id="get" parameterType="SysRoleData" resultType="SysRoleData">
        select
        <include refid="field"></include>
        from sys_role_data srd
        <where>
            <include refid="where"></include>
        </where>
    </select>

    <select id="getById" parameterType="long" resultType="SysRoleData">
        select
        <include refid="field"></include>
        from sys_role_data srd
        <where>
            srd.id = #{_parameter}
        </where>
    </select>

    <select id="getList" parameterType="SysRoleData" resultType="SysRoleData">
        select
        <include refid="field"></include>
        from sys_role_data srd
        <where>
            <include refid="where"></include>
        </where>
    </select>

    <select id="getListCount" parameterType="SysRoleData" resultType="int">
        select
        count(*)
        from sys_role_data srd
        <where>
            <include refid="where"></include>
        </where>
    </select>

    <insert id="insert" parameterType="SysRoleData">
        insert into sys_role_data srd
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                srd.id,
            </if>
            <if test="name != null">
                srd.name,
            </if>
            <if test="createTime != null">
                srd.create_time,
            </if>
            <if test="createUserId != null">
                srd.create_user_id,
            </if>
            <if test="remark != null and remark.length() > 0">
                srd.remark,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="name != null">
                #{name},
            </if>
            <if test="createTime != null">
                #{createTime},
            </if>
            <if test="createUserId != null">
                #{createUserId},
            </if>
            <if test="remark != null and remark.length() > 0">
                #{remark},
            </if>
        </trim>
    </insert>

    <update id="update" parameterType="SysRoleData">
        update sys_role_data srd
        <set>
            <if test="name != null">
                srd.name = #{name},
            </if>
            <if test="lastUpdateTime != null">
                srd.last_update_time = #{lastUpdateTime},
            </if>
            <if test="lastUpdateUserId != null">
                srd.last_update_user_id = #{lastUpdateUserId},
            </if>
            <if test="remark != null and remark.length() > 0">
                srd.remark = #{remark},
            </if>
        </set>
        <where>
            srd.id = #{id}
        </where>
    </update>

    <delete id="deleteById" parameterType="long">
        delete from sys_role_data srd where srd.id = #{_parameter}
    </delete>
</mapper>